type AttributorFeeUpdated @entity(immutable: true) {
  id: Bytes!
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ClientFeeUpdated @entity(immutable: true) {
  id: Bytes!
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CurrencyAdded @entity(immutable: true) {
  id: Bytes!
  newCurrency: Bytes! # address
  tokenType: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CurrencyRemoved @entity(immutable: true) {
  id: Bytes!
  newCurrency: Bytes! # address
  tokenType: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NftFeeCurrencyUpdated @entity(immutable: true) {
  id: Bytes!
  newCurrency: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NftFixedFeeUpdated @entity(immutable: true) {
  id: Bytes!
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProjectCooldownUpdated @entity(immutable: true) {
  id: Bytes!
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProjectRemovePeriodUpdated @entity(immutable: true) {
  id: Bytes!
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProtocolFeeCollectorUpdated @entity(immutable: true) {
  id: Bytes!
  newCollector: Bytes! 
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProtocolFeeUpdated @entity(immutable: true) {
  id: Bytes!
  value: BigInt! 
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}


type Budget @entity {
  id: String!
  account: Project!
  currency: Bytes! 
  amount: BigInt!
  remainingBudgetReferenceAmount: BigInt!
  remainingBudgetPercentage: BigInt!
}

type Project @entity {
  id: Bytes!
  projectId: BigInt! 
  deployedAddress: Bytes! 
  eventSigner: Bytes! 
  projectInfoURI: String! 
  clientFeeCollector: Bytes! 
  budgets: [Budget!]! @derivedFrom(field: "account")
}

type UserBalance @entity {
  id: String!
  account: User! 
  projectContractAddress: Bytes!
  currency: Bytes!
  claimed: BigInt!
  availableToClaim: BigInt!
}

type User @entity {
  id: String!
  account: Bytes!
  balance: [UserBalance!]! @derivedFrom(field: "account")
}
